@page "/signup"
@using System.ComponentModel.DataAnnotations
@using System.Net
@inject NavigationManager Navigation
@inject IUserServices UserServices

<link rel="stylesheet" href="/css/SignUp.css" />


<PageTitle>Signup</PageTitle>
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Signup</li>
    </ol>
</nav>
<div class="main-container-signup">
    <div class="image-section">
        <img src="https://img.freepik.com/free-vector/3d-cartoon-style-document-with-green-tick-icon-approved-contract-agreement-sheet-paper-with-checkmark-flat-vector-illustration-information-success-paperwork-concept_778687-991.jpg?t=st=1719209176~exp=1719212776~hmac=ea70a5d6ddf420277c48c772380a465814b00e99be02468547ba63e800bee245&w=826" />
    </div>
    <div class="sub-container-signup">
        <div class="title-container">
            <h1>Signup</h1>
            <p>Create Your Account and Start Your Journey!</p>
        </div>


    
        <EditForm Model="@user" OnValidSubmit="RegisterUser" FormName="signupForm">
            <DataAnnotationsValidator/>


            <div class="form-row">


                <div class="form-group col-md">
                    @* <label for="inputFirstName">First Name</label> *@
                    <input type="text" class="form-control" id="inputFirstName" placeholder="FirstName" @bind-value="user.firstName">
                    <ValidationMessage For=@(()=> user.firstName) />
                </div>


                <div class="form-group col-md">
                    @* <label for="inputLastName">LastName</label> *@
                    <input type="text" class="form-control" id="inputLastName" placeholder="LastName" @bind-value="user.LastName">
                    <ValidationMessage For=@(()=> user.LastName) />
                </div>

            </div>


              <div class="form-row">

                <div class="form-group col-md">
                    @* <label for="inputEmail4">Email</label> *@
                    <input type="email" class="form-control" id="inputEmail4" placeholder="Email" @bind-value="user.email">
                    <ValidationMessage For=@(()=> user.email) />
                </div>


                <div class="form-group col-md">
                    @* <label for="inputPassword4">Phone Numbner</label> *@
                    <input type="number" class="form-control" placeholder="Phone Number" @bind-value="user.phoneNumber"/>
                    <ValidationMessage For=@(()=> user.phoneNumber) />
                </div>

            </div>


            <div class="form-group">
                @* <label for="inputAddress">Street</label> *@
                <InputText type="text" class="form-control" id="inputAddress" placeholder="Street" @bind-Value="user.addressDTO.street"/>
                <ValidationMessage For="@(()=> user.addressDTO.street)" />
            </div>


            <div class="form-row">


                <div class="form-group col-md">
                    @* <label for="inputCity">City</label> *@
                    <InputText type="text" class="form-control" id="inputCity" placeholder="City" @bind-Value="user.addressDTO.city"/>
                    <ValidationMessage For="@(()=> user.addressDTO.city)" />
                </div>


                <div class="form-group col-md">

                    <select id="inputState" class="form-control select-control" @bind="user.addressDTO.country">
                        <ValidationMessage For="@(()=> user.addressDTO.country)" />
                        <option selected>Country</option>
                        @foreach(var country in states)
                        {
                            <option value="@country">@country</option>
                        }
                    </select>


                </div>

                <div class="form-group col-md-2">
                    @* <label for="inputZip">Zip</label> *@
                    <InputText type="text" class="form-control" id="inputZip" placeholder="Zip" @bind-Value="user.addressDTO.postalCode"/>
                    <ValidationMessage For="@(()=> user.addressDTO.postalCode)" />

                </div>
            </div>


             <div class="form-row">

                <div class="form-group col-md">
                    @* <label for="inputPassword4">Password</label> *@
                    <input type="password" class="form-control" id="inputPassword4" placeholder="Password" @bind-value="user.password">
                    <ValidationMessage For=@(()=> user.password)/>
                </div>

                <div class="form-group col-md">
                    @* <label for="inputConfirmPassword">Confirm Password</label> *@
                    <input type="password" class="form-control" id="inputConfirmPassword" placeholder="Confirm Password" @bind-value="user.confirmPassword">
                    <ValidationMessage For=@(()=> user.confirmPassword) />
                </div>

            </div>

            <button type="submit" class="btn btn-primary signup">Sign in</button>

            <small class="message">If you already have an account, please <a href="login"> Login </a> here</small>
        </EditForm>
    </div>
</div>


@code {
    public string[] states = ["United States", "Canada", "Afghanistan", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antarctica", "Antigua and/or Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "Brunei Darussalam", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Congo", "Cook Islands", "Costa Rica", "Croatia (Hrvatska)", "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands (Malvinas)", "Faroe Islands", "Fiji", "Finland", "France", "France, Metropolitan", "French Guiana", "French Polynesia", "French Southern Territories", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard and Mc Donald Islands", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran (Islamic Republic of)", "Iraq", "Ireland", "Israel", "Italy", "Ivory Coast", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea, Democratic People's Republic of", "Korea, Republic of", "Kuwait", "Kyrgyzstan", "Lao People's Democratic Republic", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libyan Arab Jamahiriya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Micronesia, Federated States of", "Moldova, Republic of", "Monaco", "Mongolia", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "Netherlands Antilles", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn", "Poland", "Portugal", "Puerto Rico", "Qatar", "Reunion", "Romania", "Russian Federation", "Rwanda", "Saint Kitts and Nevis", "Saint Lucia", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia South Sandwich Islands", "Spain", "Sri Lanka", "St. Helena", "St. Pierre and Miquelon", "Sudan", "Suriname", "Svalbard and Jan Mayen Islands", "Swaziland", "Sweden", "Switzerland", "Syrian Arab Republic", "Taiwan", "Tajikistan", "Tanzania, United Republic of", "Thailand", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States minor outlying islands", "Uruguay", "Uzbekistan", "Vanuatu", "Vatican City State", "Venezuela", "Vietnam", "Virgin Islands (British)", "Virgin Islands (U.S.)", "Wallis and Futuna Islands", "Western Sahara", "Yemen", "Yugoslavia", "Zaire", "Zambia", "Zimbabwe"];

    private string resultMessage = string.Empty;

    public UserModel user = new UserModel();


    private async Task RegisterUser()
    {
        try
        {

            bool success = await UserServices.RegisterUser(user);
            if(success)
            {
                Navigation.NavigateTo("login", true);
            }else
            {
                Console.WriteLine("Error occured!");
            }

        }catch (Exception ex)
        {
            throw new Exception(ex.Message);
            Console.WriteLine(ex.Message);
        }
    }

}
